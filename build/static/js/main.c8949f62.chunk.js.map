{"version":3,"sources":["Components/Background/Background.js","Components/Candidate/Candidate.js","Components/Results/Results.js","Components/ExtraInfo/ExtraInfo.js","Components/InfoCard/InfoCard.js","Components/Guide/Guide.js","Components/Home/Home.js","Components/FindOut/FindOut.js","App.js","serviceWorker.js","index.js"],"names":["React","Component","Candidate","props","state","meta","this","setState","Data","rel","target","href","candidates","candidate","className","Card","style","maxHeight","overflow","Container","fluid","Row","Col","xs","md","Image","src","height","width","rounded","Results","graphOptions","series","topThreeCandidates","metaData","resultsData","issues","topics","Object","keys","topic","length","i","curr_issue","push","favorableCandidates","mostFavorableCandidates","issue","console","log","parseInt","sort","current","cnt","a","b","score","slice","graphData","graphCaptions","topThreeMeta","topCandidate","labels","chart","foreColor","toolbar","show","name","data","map","key","options","type","ExtraInfo","Button","variant","onClick","close","moreInfo","info","text","InfoCard","remove","currentIssue","cards","stance","direction","newMeta","assign","showLearnMore","updateProgress","skip","canSkip","handleShowMore","baseNum","numTopics","increase","numAnswered","progressState","setDirection","Math","random","ceil","ProgressBar","now","buttons","left","right","size","disabled","alt","onAfterSwipe","onSwipe","issueName","open","onRequestClose","modalElementClass","Guide","weights","location","Home","sm","data-aos","borderWidth","borderColor","fontSize","FindOut","handleRating","rating","count","weight","issuekeys","j","prevState","progress","formattedIssues","Issuekeys","splice","marginBottom","IssueGroup","Body","Title","Text","initialRating","fractions","fullSymbol","display","borderRadius","border","backgroundColor","to","pathname","App","AOS","init","duration","once","integrity","crossOrigin","Navbar","bg","path","exact","component","render","Boolean","window","hostname","match","ReactDOM","locale","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8949f62.chunk.js","sourcesContent":["import React from 'react';\nimport './Background.css';\n\nclass Background extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { };\n    }\n    //url(\"https://i.imgur.com/rFZnQ2M.png?1\");\n    \n\n    render (){\n        return (\n            <div className=\"progress-holder\">\n                <div className=\"wave progress-bar\" style={ { \"width\": this.props.progressUpdate + 'vw'} }>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Background;","import React from 'react';\nimport './Candidate.css';\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport Image from \"react-bootstrap/Image\";\nimport Data from '../../DataDriver.json';\n\n\nclass Candidate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { meta: {}};\n    }\n\n    componentWillMount(){\n        this.setState({\n            meta: Data\n        })\n    }\n\n\n    render (){\n        return (\n            <a rel=\"noopener noreferrer\" target=\"_blank\" href={this.state.meta.candidates[this.props.candidate]['url']} className=\"text-decoration-none text-dark\">\n                <Card className=\"mb-2\" style={{ maxHeight: '50px', overflow: \"hidden\"}}>\n                    <Container fluid className=\"p-0\">\n                        <Row>\n                            <Col xs={3} md={3} className=\"p-0\">\n                                <Image src={ this.state.meta.candidates[this.props.candidate]['avatar']} style={{ height: '50px', width:\"auto\"}} rounded />\n                            </Col>\n                            <Col>\n                                <h4 className=\"mt-2\">{ this.state.meta.candidates[this.props.candidate]['name']}</h4>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Card>\n            </a>\n        );\n    }\n}\n\nexport default Candidate;","import React from 'react';\nimport './Results.css';\nimport Chart from 'react-apexcharts'\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Candidate from \"../Candidate/Candidate\";\nimport * as Nano  from 'nano'\nimport Data from '../../DataDriver.json';\n\nclass Results extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { graphOptions: {}, series: [], topThreeCandidates: [] };\n    }\n\n    componentWillMount(){\n        //console.log(this.props);\n        let metaData = this.props.resultsData;\n        //console.log(metaData);\n        let issues = []\n        let topics = Object.keys(metaData.issues);\n\n        for (let topic = 0; topic < topics.length; topic++){\n            for (let i = 0; i < Object.keys(metaData.issues[topics[topic]]).length; i++){\n                let curr_issue = Object.keys(metaData.issues[topics[topic]])[i]\n                issues.push({ \n                    [ curr_issue ]: metaData.issues[topics[topic]][ curr_issue ]\n                } );\n            }\n        }\n\n        let favorableCandidates = [];\n        let mostFavorableCandidates = [];\n        //console.log(issues);\n\n        for (let issue = 0; issue < issues.length; issue++){\n            // (cater)\n            //let candidates = Object.keys(metaData.issues[ Object.keys(issues[issue])[0] ]  [issues[issue] ].candidate);\n            let candidates = metaData.candidates;\n            console.log(candidates)\n            for (let candidate = 0; candidate < candidates.length; candidate++){\n                if (metaData.issues[ this.props.issue ][issues[issue]]['candidate'][candidates[candidate]] === parseInt(metaData.issues[ this.props.issue ][issues[issue]]['stance'])){\n                    favorableCandidates.push(candidates[candidate])\n                }\n            }\n        }\n        //console.log(favorableCandidates);\n\n        favorableCandidates.sort();\n        let current = null;\n        let cnt = 0;\n        for (let i = 0; i < favorableCandidates.length; i++) {\n            if (favorableCandidates[i] !== current) {\n                if (cnt > 0) {\n                    mostFavorableCandidates.push({ \"candidate\": current, \"score\": cnt });\n                }\n                current = favorableCandidates[i];\n                cnt = 1;\n            } else {\n                cnt++;\n            }\n        }\n        if (cnt > 0) {\n            mostFavorableCandidates.push({ \"candidate\": current, \"score\": cnt });\n        }\n        mostFavorableCandidates.sort((a, b) => (a.score < b.score) ? 1 : -1);\n        let topThreeCandidates = mostFavorableCandidates.slice(0, 3);\n        //console.log(topThreeCandidates);\n        \n        let graphData = [];\n        let graphCaptions = [];\n        let topThreeMeta = []\n        for (let topCandidate = 0; topCandidate < topThreeCandidates.length; topCandidate++) {\n            graphData.push(topThreeCandidates[topCandidate]['score']);\n            graphCaptions.push(metaData['candidates'][topThreeCandidates[topCandidate]['candidate']]['name']);\n            topThreeMeta.push(topThreeCandidates[topCandidate]['candidate']);\n        }\n        //console.log(graphCaptions)\n        /*\n        let n = Nano('http://localhost:5984')\n        const db = n.db.use('knovember-dev');\n        db.insert(metaData.issues).then((body) => {\n            console.log(body);\n        });\n        */\n        this.setState({\n            topThreeCandidates: topThreeMeta,\n            graphOptions: {\n                labels: graphCaptions,\n                chart: {\n                    foreColor: '#000000',\n                    toolbar: {\n                      show: false\n                      \n                    }\n                  }\n              },\n            series: [{\n                name: '',\n                data: graphData,\n              }]\n            \n        });\n\n    }\n    \n    render (){\n        return (\n            <div className=\"results-card\">\n                <Container>\n                    <Row>\n                        <Col xs={12} md={6}>\n                            <h1 className=\"title\">Results</h1>\n                            <p className=\"result-description\">Based on your Answers your views are more in line with</p>\n                            {this.state.topThreeCandidates.map((candidate, i) => <Candidate key={i} candidate={candidate} ></Candidate>)}\n                        </Col>\n                        <Col xs={12} md={6}>\n                            <Chart options={this.state.graphOptions} series={this.state.series} type=\"radar\" height=\"350\" />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Results;","import React from 'react';\nimport './ExtraInfo.css';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass ExtraInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render (){\n\n        return (\n            <div className=\"container-fluid pt-4 bg-transparent extra-info-card\">\n                <div className=\"card border-0 extra-info-card extra-info-holder\">\n                    <div className=\"card-body\">\n                        <Row>\n                            <Col><h5 className=\"card-title mt-2\">The More You Know</h5></Col>\n                            <Col md={3}><Button variant=\"light\" onClick={ this.props.close } className=\"pull-right\">Close</Button></Col>\n                        </Row>\n                        <hr />\n                        <div>\n                            {   this.props.moreInfo ?\n                                this.props.moreInfo.map((info) => \n                                    <section className=\"extra-info-item p-2\">\n                                        <p className=\"card-text\">{ info.text }</p>\n                                    </section>\n                                ):(\n                                    <div className=\"text-center\">\n                                        <h2 className=\"mt-5\">{ \"¯\\\\_(ツ)_/¯\" }</h2>\n                                        <p className=\"card-text\">Not much else to say.</p>\n                                    </div>\n                                )\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ExtraInfo;","import React from 'react';\nimport './InfoCard.css';\nimport Swipeable from \"react-swipy\";\nimport Results from \"../Results/Results\";\nimport Data from '../../DataDriver.json';\nimport ExtraInfo from '../ExtraInfo/ExtraInfo';\nimport Button from \"react-bootstrap/Button\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport Drawer from 'react-drag-drawer';\nimport {FormattedMessage, FormattedHTMLMessage} from 'react-intl';\n\nclass InfoCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            meta: {}, \n            cards: [], \n            direction: '', \n            showLearnMore: false, \n            canSkip: 0, \n            progressState: 0, \n            numAnswered: 0,\n            numTopics: 0 \n        };\n    }\n\n    componentWillMount() {\n        //console.log(this.props.issue);\n        let issues = [];\n        let topics = Object.keys(Data.issues)\n        for (let topic = 0; topic < topics.length; topic++){\n            for (let i = 0; i < Object.keys(Data.issues[topics[topic]]).length; i++){\n                issues.push([ topics[topic], Object.keys(Data.issues[topics[topic]])[i]] );\n            }\n        }\n        issues.sort(() => Math.random() - 0.5);\n        //console.log(issues);\n\n        this.setState({\n            numTopics: issues.length,\n            meta: Data,\n            cards: issues, //Object.keys(Data.issues[this.props.issue]),\n            canSkip: Math.ceil(0.1 * issues.length)\n        })\n    }\n\n    remove = () => {\n        let currentIssue = this.state.cards[0]; //[ category, issue ]\n        let stance = 0;\n        (this.state.direction === \"left\") ? stance = 0 : stance = 1;\n        let newMeta = Object.assign({}, this.state.meta);\n        //console.log(newMeta);\n        //console.log(currentIssue);\n        newMeta.issues[currentIssue[0]][currentIssue[1]]['stance'] = stance;  \n\n        this.setState({\n            meta: newMeta,\n            cards: this.state.cards.slice(1, this.state.cards.length),\n            direction: '',\n            showLearnMore: false\n        },this.updateProgress);\n    }\n\n    skip = () => {\n        this.setState({\n            cards: this.state.cards.slice(1, this.state.cards.length),\n            direction: '',\n            showLearnMore: false,\n            canSkip: this.state.canSkip - 1\n        },this.updateProgress);\n    }\n\n    handleShowMore = () => {\n        this.setState({\n            showLearnMore: !this.state.showLearnMore\n        });\n    }\n\n    updateProgress = () => {\n        let baseNum = this.state.numTopics\n        let increase = ((this.state.numAnswered + 1) / baseNum ) * 100\n        console.log(increase);\n        this.setState({progressState: increase, numAnswered: this.state.numAnswered + 1})\n    }\n\n    \n\n    setDirection = direction => this.setState({direction})\n\n    render (){\n\n        return (\n            <div className=\"info-card-container\">\n                <ProgressBar now={ this.state.progressState } variant={'info'} className=\"bg-white\" style={{height: '3px'}}/>\n\n                {this.state.cards.length > 0 ? (\n                    <div>\n                    <Swipeable\n                        buttons={({left, right}) => (\n                        <div className=\"action-button-container\">\n                            <div className=\"row\">\n                                <div className=\"col p-0\">\n                                    <button className=\"btn btn-danger btn-lg my-3 rounded-pill mr-4 float-right\" onClick={left}>CON</button>\n                                </div>\n                                <div className=\"col-2 p-0\">\n                                <Button className=\"my-3 rounded-pill\" size={ 'lg' } onClick={ this.skip } variant={ this.state.canSkip ? 'warning' : 'secondary' } disabled={ this.state.canSkip ? false : true }>\n                                    <img className=\"img-fluid mx-auto my-auto\" style={{width: '30px', height: 'auto'}} alt=\"Skip\" src=\"https://img.icons8.com/ios-glyphs/100/000000/end.png\" />\n                                </Button>\n                                </div>\n                                <div className=\"col p-0\">\n                                    <button className=\"btn btn-success btn-lg my-3 rounded-pill ml-4 float-left\" onClick={right}>PRO</button>\n                                </div>\n                            </div>\n                        </div>\n                        )}\n                        onAfterSwipe={\n                            this.remove\n                        }\n                        onSwipe={this.setDirection}\n                    >\n                            <div className={\"info-card \" + this.state.direction} > \n                                <div><span className=\"badge badge-success float-left\">{ this.state.meta.issueName[this.state.cards[0][0]] }</span></div>\n                                <br/>\n                                <h1 className=\"info-title\">{this.state.meta.issues[this.state.cards[0][0]][this.state.cards[0][1]]['title']}</h1>\n                                <p className=\"info-description text-light\">{this.state.meta.issues[this.state.cards[0][0]][this.state.cards[0][1]]['description']}</p>\n                                <button className=\"btn btn-info btn-sm rounded-pill text-bold my-3 info-button\" onClick={ this.handleShowMore }>Learn More</button>\n                            </div>\n                    </Swipeable>\n\n                    <Drawer\n                        open={this.state.showLearnMore}\n                        onRequestClose={this.handleShowMore}\n                        modalElementClass={\"learn-more-modal\"}\n                        >\n                        <ExtraInfo close={ this.handleShowMore } moreInfo={this.state.meta.issues[this.state.cards[0][0]][this.state.cards[0][1]]['more-info']} />\n                    </Drawer>\n                    </div>\n                ) : (\n                    <Results resultsData={ this.state.meta } issue={this.props.issue}/>\n                \n            )}\n            \n            </div>\n        );\n    }\n}\n\nexport default InfoCard;","import React from 'react';\nimport Background from '../Background/Background';\nimport InfoCard from '../InfoCard/InfoCard';\nimport Data from '../../DataDriver.json';\n\n\nclass Guide extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    /*{div: [\n        {#!each props.location.weights: [\n            {p: [\n                \"#! each.weight\",\n                \": \",\n                \"#! props.location.weights['\"\n            ]}\n        ]}\n    ]}*/\n\n    render() {\n        return (\n            <div>\n                {/*\n                    Object.keys(this.props.location.weights).map(\n                        // (weight) => <p>{weight + \": \" + this.props.location.weights[weight]}</p>\n                        (weight) => <p>{`${weight}: ${this.props.location.weights[weight]}`}</p>\n                    )\n                    */}\n                <InfoCard weights={this.props.location.weights} ></InfoCard>\n            </div>\n        );\n    }\n}\n\nexport default Guide;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\n\n\n\nclass Home extends React.Component {\n    \n    render () {\n        return (\n            <Container>\n                <h2 className=\"mt-5 font-weight-normal\">Will You <i className=\"font-weight-bolder\">Know</i> Before <i className=\"font-weight-bolder\">November?</i></h2>\n                <section className=\"mt-5\">\n                    <Row>\n                        <Col md={6} sm={12} className=\"mt-5\" data-aos=\"fade-right\">\n                            <Image src=\"https://i.imgur.com/cQPcgVW.png\" fluid style={{ maxHeight: '200px'}} />\n                            <h5 className=\"mt-5\">There are a lot of candidates!</h5>\n                            <p className=\"text-secondary\">As of 2020, <i className=\"font-weight-bold\">789</i> presidential candidates have filed to run <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.fec.gov/data/candidates/?election_year=2020&office=P\">Learn More</a></p>\n                        </Col>\n                        <Col md={6} sm={12} className=\"mt-5\" data-aos=\"fade-left\">\n                        <Image src=\"https://i.imgur.com/vNAygyj.png\" fluid style={{maxHeight: '200px'}} />\n                            <h5 className=\"mt-5\">Too many Distractions!</h5>\n                            <p className=\"text-secondary\">News sources, Rallies, Reddit pages, Facebook, Twitter wars, late night satire, etc.</p>\n                        </Col>\n                    </Row>\n                </section>\n                <section className=\"my-5\" data-aos=\"zoom-in-down\">\n                    <Row>\n                        <Col md={12} sm={12} className=\"mt-5\">\n                            <Image src=\"https://i.imgur.com/CH65zMn.png\" fluid style={{ maxHeight: '300px'}} />\n                            <h2 className=\"mt-5\">How do you know who to support?</h2>\n                        </Col>\n                    </Row>\n                </section>\n                <hr className=\"my-5\" style={{ borderWidth: \"5px\", width: \"100px\", borderColor: \"#0984e3\" }} />\n                \n                <section className=\"my-5\" data-aos=\"fade-up\">\n                    <h3><span className=\"mx-auto font-weight-bold font-italic pt-2\" style={{ fontSize: \"2em\"}}>Knovember</span> connects you to your Ideal candidate</h3>\n                    <Image className=\"mt-5\" src=\"https://i.imgur.com/NZe8nyf.png\" fluid style={{ maxHeight: '300px'}} />\n                </section>\n\n                <nav className=\"navbar navbar-light bg-light\">\n                    <p className=\"my-3 mx-auto font-weight-bold\">© 2019 Knovember</p>\n                </nav>\n                \n            </Container>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Data from '../../DataDriver.json';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from \"react-router-dom\";\nimport Rating from \"react-rating\";\nimport './FindOut.css';\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\n\n\nclass FindOut extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { meta: Data, formattedIssues: [], weight: {}, progress: 0 };\n    }\n\n    async componentWillMount() {\n        let formattedIssues = [];\n        let Issuekeys = Object.keys(Data.issues);\n        let weights = {};\n        for (let i = 0; i < Object.keys(Data.issues).length; i ++){\n            weights[Object.keys(Data.issues)[i]] = 0;\n        }\n        while(Issuekeys.length) formattedIssues.push(Issuekeys.splice(0,3));\n        await this.setState({\n            formattedIssues: formattedIssues,\n            weight: weights\n        });\n        //console.log(this.state.weight);\n    }\n\n    handleRating = (rating, issue) => {\n        let count = 0;\n        if (this.state.weight[issue] === 0){\n            count = 1;\n        }\n        let issuekeys = Object.keys(this.state.weight);\n        for (let j = 0; j < issuekeys.length; j ++){\n            if (this.state.weight[issuekeys[j]] > 0){\n                count ++;\n            }\n        }\n        \n        this.setState(prevState => ({\n            weight: {\n                ...prevState.weight,\n                [issue]: rating\n            },\n            progress: (count / issuekeys.length ) * 100\n        }), ()=> console.log(this.state.progress))\n    }\n\n    render () {\n        return (\n            <div>\n            <Container style={{ marginBottom: \"60px\" }}>\n                <h3 className=\"mt-5\">FindOut</h3>\n                <p className=\"text-secondary\">We've created politcal issue guides to ease the process of finding your Ideal candidate.</p>\n                <p className=\"text-primary\">Please rate each issue on its importance to you.</p>\n\n                {this.state.formattedIssues.map((IssueGroup, j) => (\n                    <Row className=\"mt-5\" key={j}>\n                        \n                        { IssueGroup.map((issue, i )=> (\n                            <Col md={4} sm={12} key={i} className=\"mb-3\">\n                                { /*<Link \n                                    to={ \"/guide/\" + issue }\n                                    className=\"text-decoration-none text-dark\"\n                                >*/}\n                                    <Card className=\"shadow border-rounded border-white\">\n                                        <Card.Body>\n                                            <Card.Title>{ this.state.meta.issueName[issue]}</Card.Title>\n                                            <Card.Text>\n                                            Which candidates closely share my views on { this.state.meta.issueName[issue]}\n                                            </Card.Text>\n                                            <div className=\"rating-holder\">\n                                                <Rating \n                                                    onClick={(rating) =>  this.handleRating(rating,issue)} \n                                                    initialRating={this.state.weight[issue]} \n                                                    fractions={2}\n                                                    fullSymbol={<span style={{ display: \"inline-block\", borderRadius: \"50%\", border: \"5px double white\", width: \"30px\", height: \"30px\", backgroundColor: \"#74b8f8\" }}></span>}\n                                                />\n                                            </div>\n                                        </Card.Body>\n                                    </Card>\n                                { /* </Link> */ }\n                            </Col>\n                        ))\n                        }\n                        \n                    </Row>\n                ))}\n            </Container>\n            \n\n            <div className=\"footer shadow-lg\">\n            <ProgressBar now={ this.state.progress } variant={'info'} className=\"bg-white\" style={{height: '3px'}}/>\n            <Link \n                to={{ \n                    pathname: \"/guide/\",\n                    weights: this.state.weight\n                }}\n                className=\"text-decoration-none text-dark\"\n            >\n                <Button className=\"mt-2\" disabled={ this.state.progress === 100 ? false : true }>Continue</Button>\n            </Link>\n            </div> \n            \n            </div>\n        );\n    }\n}\n\nexport default FindOut;","import React from 'react';\nimport './App.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Guide from './Components/Guide/Guide';\nimport Home from './Components/Home/Home';\nimport FindOut from './Components/FindOut/FindOut';\nimport Button from 'react-bootstrap/Button';\nimport { BrowserRouter as Router, Route, Switch, NavLink } from \"react-router-dom\";\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\n\n\nclass App extends React.Component {\n\n  componentDidMount(){\n    AOS.init({\n      duration : 2000,\n      once : true\n    });\n  }\n  render () {\n    return (\n      <div className=\"App\">\n        <Router>\n          <link\n            rel=\"stylesheet\"\n            href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n            integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n            crossOrigin=\"anonymous\"\n          />\n          <Navbar bg=\"white\" className=\"justify-content-between\">\n            <NavLink to=\"/\">\n              <p className=\"navbar-brand mx-auto m-0 pt-1 font-weight-bold font-italic pt-2\" style={{ fontSize: \"2em\"}}>Knovember</p>\n            </NavLink>\n            <NavLink to=\"/find-out\" className=\"navbar-nav ml-auto text-decoration-none\"><Button variant={\"outline-primary\"} >Find Out</Button></NavLink>\n          </Navbar>\n        \n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/guide/:guide\" component={Guide} />\n            <Route path=\"/guide\" exact component={Guide} />\n            <Route path=\"/find-out\" exact component={FindOut} />\n            <Route render={ () => <h1>404 Error</h1> } />\n          </Switch>\n        </Router>\n      </div>\n    );\n  } \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {IntlProvider} from 'react-intl';\n\nReactDOM.render(\n    <IntlProvider locale=\"en\">\n        <App />\n    </IntlProvider>\n    , document.getElementById('root')\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}